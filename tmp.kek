eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/community/EuroTokenCommunity.kt:13:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/community/EuroTokenCommunity.kt:21:    private lateinit var transactionRepository: TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/community/EuroTokenCommunity.kt:31:    fun setTransactionRepository(transactionRepositoryLocal: TransactionRepository) {
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/exchange/ExchangeFragment.kt:23:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/exchange/ExchangeFragment.kt:116:                    TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/exchange/CreateMoneyFragment.kt:12:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/exchange/CreateMoneyFragment.kt:101:            TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/exchange/DestroyMoneyFragment.kt:10:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/exchange/DestroyMoneyFragment.kt:91:            TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/exchange/DestroyMoneyFragment.kt:93:        binding.txtAmount.text = TransactionRepository.prettyAmount(amount)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:17:    private val transactionRepository: TransactionRepository,
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:25:        if (item.transaction.type == TransactionRepository.BLOCK_TYPE_CHECKPOINT) {
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:26:            txtAmount.text = TransactionRepository.prettyAmount(
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:34:        } else if (item.transaction.type == TransactionRepository.BLOCK_TYPE_ROLLBACK) {
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:35:            txtAmount.text = TransactionRepository.prettyAmount(item.transaction.amount)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:39:            txtAmount.text = TransactionRepository.prettyAmount(item.transaction.amount)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:51:                TransactionRepository.BLOCK_TYPE_DESTROY,
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:52:                TransactionRepository.BLOCK_TYPE_CREATE,
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:53:                TransactionRepository.BLOCK_TYPE_CHECKPOINT
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:71:        if (item.transaction.block.type == TransactionRepository.BLOCK_TYPE_ROLLBACK) {
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:74:                "(${transactionRepository.trustChainCommunity.database.getBlockWithHash((item.transaction.block.transaction[TransactionRepository.KEY_TRANSACTION_HASH] as String).hexToBytes())!!.sequenceNumber})"
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:93:        txtBalance.text = "Balance: " + TransactionRepository.prettyAmount(
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionItemRenderer.kt:99://        txtVBalance.text = TransactionRepository.prettyAmount(transactionRepository.getVerifiedBalanceForBlock(item.transaction.block, transactionRepository.trustChainCommunity.database)!!)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionsFragment.kt:23:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionsFragment.kt:91:            if (!transaction.outgoing && transaction.block.type == TransactionRepository.BLOCK_TYPE_TRANSFER) {
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionsFragment.kt:132:                    TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transactions/TransactionsFragment.kt:153:                TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/EurotokenBaseFragment.kt:22:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/EurotokenBaseFragment.kt:30:        TransactionRepository.getInstance(requireContext(), getTrustChainCommunity())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/EurotokenBaseFragment.kt:69:        transactionRepository.trustChainCommunity.addListener(TransactionRepository.BLOCK_TYPE_TRANSFER, onReceiveListener)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/EurotokenBaseFragment.kt:70:        transactionRepository.trustChainCommunity.addListener(TransactionRepository.BLOCK_TYPE_CREATE, onReceiveListener)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/EurotokenBaseFragment.kt:75:        transactionRepository.trustChainCommunity.removeListener(onReceiveListener, TransactionRepository.BLOCK_TYPE_TRANSFER)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/EurotokenBaseFragment.kt:76:        transactionRepository.trustChainCommunity.removeListener(onReceiveListener, TransactionRepository.BLOCK_TYPE_CREATE)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transfer/TransferFragment.kt:21:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transfer/TransferFragment.kt:47:                    TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transfer/TransferFragment.kt:67:            TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transfer/SendMoneyFragment.kt:12:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transfer/SendMoneyFragment.kt:70:            TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/ui/transfer/SendMoneyFragment.kt:72:        binding.txtAmount.text = TransactionRepository.prettyAmount(amount)
eurotoken/src/main/java/nl/tudelft/trustchain/eurotoken/EuroTokenMainActivity.kt:6:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/build/ktlint/ktlintMainSourceSetFormat.args:18:src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt
common/build/ktlint/ktlintMainSourceSetCheck.args:13:src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidator.kt:6:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidator.kt:9:class EuroTokenCreationValidator(transactionRepository: TransactionRepository) : EuroTokenBaseValidator(transactionRepository) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidator.kt:11:        if (!block.transaction.containsKey(TransactionRepository.KEY_AMOUNT)) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidator.kt:9:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidator.kt:15:open class EuroTokenBaseValidator(val transactionRepository: TransactionRepository) : TransactionValidator {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidator.kt:27:        if (!block.transaction.containsKey(TransactionRepository.KEY_BALANCE)) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidator.kt:34:        if ((block.transaction[TransactionRepository.KEY_BALANCE] as Long) < 0L) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidator.kt:35:            throw InsufficientBalance("block balance (${block.sequenceNumber}): ${block.transaction[TransactionRepository.KEY_BALANCE]} is negative")
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidator.kt:37:        if (block.transaction[TransactionRepository.KEY_BALANCE] != balanceBefore + balanceChange) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidator.kt:39:            throw InvalidBalance("block balance (${block.sequenceNumber}): ${block.transaction[TransactionRepository.KEY_BALANCE]} does not match calculated balance: $balanceBefore + $balanceChange ")
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidator.kt:46:        if (blockBefore.type == TransactionRepository.BLOCK_TYPE_CHECKPOINT) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollBackValidator.kt:6:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollBackValidator.kt:8:class EuroTokenRollBackValidator(transactionRepository: TransactionRepository) : EuroTokenBaseValidator(transactionRepository) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollBackValidator.kt:10:        if (!block.transaction.containsKey(TransactionRepository.KEY_AMOUNT)) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollBackValidator.kt:13:        if (!block.transaction.containsKey(TransactionRepository.KEY_TRANSACTION_HASH)) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollBackValidator.kt:17:        val rolled_back = database.getBlockWithHash((block.transaction[TransactionRepository.KEY_TRANSACTION_HASH] as String).hexToBytes())
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidator.kt:7:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidator.kt:10:class EuroTokenCheckpointValidator(transactionRepository: TransactionRepository) : EuroTokenBaseValidator(transactionRepository) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidator.kt:5:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidator.kt:7:class EuroTokenDestructionValidator(transactionRepository: TransactionRepository) : EuroTokenBaseValidator(transactionRepository) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidator.kt:9:        if (!block.transaction.containsKey(TransactionRepository.KEY_AMOUNT)) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidator.kt:12:        if ( !block.transaction.containsKey(TransactionRepository.KEY_PAYMENT_ID) &&
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidator.kt:13:            !block.transaction.containsKey( TransactionRepository.KEY_IBAN )) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidator.kt:7:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidator.kt:9:class EuroTokenTransferValidator(transactionRepository: TransactionRepository) : EuroTokenBaseValidator(transactionRepository) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidator.kt:11:        if (!block.transaction.containsKey(TransactionRepository.KEY_AMOUNT)) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt:18:class TransactionRepository(
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt:328:        private lateinit var instance: TransactionRepository
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt:329:        fun getInstance(context: Context, trustChainCommunity: TrustChainCommunity): TransactionRepository {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt:331:                instance = TransactionRepository(gatewayStore=GatewayStore.getInstance(context), trustChainCommunity = trustChainCommunity)
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/utils.kt:30:        -((block.transaction[TransactionRepository.KEY_AMOUNT] ?: BigInteger.valueOf(0)) as BigInteger).toLong()
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/utils.kt:32:        ((block.transaction[TransactionRepository.KEY_AMOUNT] ?: BigInteger.valueOf(0)) as BigInteger).toLong()
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/utils.kt:38:    if (block.isAgreement || block.type == TransactionRepository.BLOCK_TYPE_ROLLBACK) { // block is receiving money, dont add
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/utils.kt:41:        return -((block.transaction[TransactionRepository.KEY_AMOUNT] ?: BigInteger.valueOf(0)) as BigInteger).toLong()
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/utils.kt:48:    if (block.type == TransactionRepository.BLOCK_TYPE_CHECKPOINT && block.isProposal) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/utils.kt:51:            return (block.transaction[TransactionRepository.KEY_BALANCE] as Long)
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/utils.kt:64:    if (TransactionRepository.EUROTOKEN_TYPES.contains(block.type)) {
common/src/main/java/nl/tudelft/trustchain/common/eurotoken/utils.kt:66:            return (block.transaction[TransactionRepository.KEY_BALANCE] as Long)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:14:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:19:    TransactionRepository.BLOCK_TYPE_CHECKPOINT to EuroTokenCheckpointValidator( mockk(relaxed = true) ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:20:    TransactionRepository.BLOCK_TYPE_TRANSFER to EuroTokenTransferValidator( mockk(relaxed = true) ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:21:    TransactionRepository.BLOCK_TYPE_CREATE to EuroTokenCreationValidator( mockk(relaxed = true) ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:22:    TransactionRepository.BLOCK_TYPE_ROLLBACK to EuroTokenRollBackValidator( mockk(relaxed = true) ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:23:    TransactionRepository.BLOCK_TYPE_DESTROY to EuroTokenDestructionValidator( mockk(relaxed = true) )
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:31:        block_type = TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:33:            TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(balance),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:34:            TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:38:            block_type = TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:40:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(balance),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:41:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:47:        block_type = TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:49:            TransactionRepository.KEY_BALANCE to balance
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:58:            block_type = TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/ValidatorTestUtils.kt:60:                TransactionRepository.KEY_BALANCE to balance
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:4:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:13:        TestBlock(block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:28:            block_type = TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:30:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:37:            block_type = TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:39:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:47:            block_type = TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:49:                TransactionRepository.KEY_BALANCE to 10L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:60:            block_type = TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:62:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:70:            block_type = TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:72:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:84:            block_type = TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:86:                TransactionRepository.KEY_BALANCE to 20L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:97:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:99:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:100:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(20)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:109:            block_type = TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCheckpointValidatorTest.kt:111:                TransactionRepository.KEY_BALANCE to 10L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:4:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:14:        TestBlock( block_type=TransactionRepository.BLOCK_TYPE_TRANSFER)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:28:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:30:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:31:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:50:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:52:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:72:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:74:                TransactionRepository.KEY_BALANCE to 10L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:75:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:89:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:91:                TransactionRepository.KEY_BALANCE to -10L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenTransferValidatorTest.kt:92:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:4:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:15:        TestBlock( block_type = TransactionRepository.BLOCK_TYPE_CHECKPOINT )
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:23:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:24:            transaction= mapOf(TransactionRepository.KEY_BALANCE to 0L))
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:34:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:35:            transaction= mapOf(TransactionRepository.KEY_BALANCE to 1L))
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:46:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:63:            block_type=TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:64:            transaction= mapOf(TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:74:            block_type=TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:75:            transaction=mapOf(TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:84:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:86:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(5),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:87:                TransactionRepository.KEY_BALANCE to 5L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:105:            block_type=TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:106:            transaction= mapOf(TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:116:            block_type=TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:117:            transaction=mapOf(TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(11)),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:135:            block_type=TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:136:            transaction= mapOf(TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10)),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:141:            block_type=TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:142:            transaction=mapOf(TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(11)),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:155:        val prev = TestBlock(block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:156:            transaction=mapOf( TransactionRepository.KEY_BALANCE to 0L )
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:163:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:164:            transaction=mapOf( TransactionRepository.KEY_BALANCE to 0L ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:179:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:180:            transaction=mapOf( TransactionRepository.KEY_BALANCE to 0L ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:195:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:196:            transaction=mapOf( TransactionRepository.KEY_BALANCE to 0L ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:214:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:215:            transaction=mapOf( TransactionRepository.KEY_BALANCE to 0L ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:230:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:231:            transaction=mapOf( TransactionRepository.KEY_BALANCE to 0L ),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:250:            block_type=TransactionRepository.BLOCK_TYPE_CHECKPOINT,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:251:            transaction=mapOf( TransactionRepository.KEY_BALANCE to 0L )
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:260:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:262:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(5),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:263:                TransactionRepository.KEY_BALANCE to 5L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:273:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:275:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(5),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenBaseValidatorTest.kt:276:                TransactionRepository.KEY_BALANCE to 5L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidatorTest.kt:4:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidatorTest.kt:14:        TestBlock(block_type=TransactionRepository.BLOCK_TYPE_CREATE)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidatorTest.kt:21:        val block = TestBlock(block_type=TransactionRepository.BLOCK_TYPE_CREATE, transaction= mapOf())
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidatorTest.kt:40:            block_type=TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidatorTest.kt:42:                TransactionRepository.KEY_BALANCE to 10L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidatorTest.kt:49:            block_type=TransactionRepository.BLOCK_TYPE_CREATE,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenCreationValidatorTest.kt:51:                TransactionRepository.KEY_BALANCE to 10L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:4:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:15:        TestBlock(block_type=TransactionRepository.BLOCK_TYPE_DESTROY)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:29:            block_type=TransactionRepository.BLOCK_TYPE_DESTROY,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:31:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:32:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:33:                TransactionRepository.KEY_PAYMENT_ID to "ID"
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:52:            block_type = TransactionRepository.BLOCK_TYPE_DESTROY,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:54:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:55:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:56:                TransactionRepository.KEY_IBAN to "IBAN"
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:75:            block_type = TransactionRepository.BLOCK_TYPE_DESTROY,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:77:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:78:                TransactionRepository.KEY_IBAN to "IBAN"
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:98:            block_type = TransactionRepository.BLOCK_TYPE_DESTROY,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:100:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:101:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:122:            block_type = TransactionRepository.BLOCK_TYPE_DESTROY,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:124:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:125:                TransactionRepository.KEY_BALANCE to 10L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:126:                TransactionRepository.KEY_IBAN to "IBAN"
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:141:            block_type = TransactionRepository.BLOCK_TYPE_DESTROY,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:143:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:144:                TransactionRepository.KEY_BALANCE to -10L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenDestructionValidatorTest.kt:145:                TransactionRepository.KEY_IBAN to "IBAN"
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:4:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:14:        TestBlock( block_type=TransactionRepository.BLOCK_TYPE_ROLLBACK)
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:24:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:26:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:27:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:31:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:33:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:34:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:46:            block_type=TransactionRepository.BLOCK_TYPE_ROLLBACK,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:48:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:49:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:50:                TransactionRepository.KEY_TRANSACTION_HASH to A1.calculateHash().toHex()
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:65:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:67:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:68:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:72:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:74:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:75:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:87:            block_type=TransactionRepository.BLOCK_TYPE_ROLLBACK,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:89:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:90:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:91:                TransactionRepository.KEY_TRANSACTION_HASH to "ABCD"
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:106:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:108:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:109:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:113:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:115:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:116:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:128:            block_type=TransactionRepository.BLOCK_TYPE_ROLLBACK,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:130:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:131:                TransactionRepository.KEY_TRANSACTION_HASH to A1.calculateHash().toHex()
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:147:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:149:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:150:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:154:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:156:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:157:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:169:            block_type=TransactionRepository.BLOCK_TYPE_ROLLBACK,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:171:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:172:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:188:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:190:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:191:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:195:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:197:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:198:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:210:            block_type=TransactionRepository.BLOCK_TYPE_ROLLBACK,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:212:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:213:                TransactionRepository.KEY_BALANCE to 0L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:214:                TransactionRepository.KEY_TRANSACTION_HASH to A1.calculateHash().toHex()
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:229:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:231:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:232:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:236:            block_type=TransactionRepository.BLOCK_TYPE_TRANSFER,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:238:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(10),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:239:                TransactionRepository.KEY_BALANCE to 0L
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:251:            block_type=TransactionRepository.BLOCK_TYPE_ROLLBACK,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:253:                TransactionRepository.KEY_AMOUNT to BigInteger.valueOf(5),
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:254:                TransactionRepository.KEY_BALANCE to 5L,
common/src/test/java/nl/tudelft/trustchain/common/eurotoken/blocks/EuroTokenRollbackValidatorTest.kt:255:                TransactionRepository.KEY_TRANSACTION_HASH to A1.calculateHash().toHex()
.git/COMMIT_EDITMSG:8:#	modified:   common/src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt
.idea/workspace.xml:31:      <change beforePath="$PROJECT_DIR$/common/src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt" beforeDir="false" afterPath="$PROJECT_DIR$/common/src/main/java/nl/tudelft/trustchain/common/eurotoken/TransactionRepository.kt" afterDir="false" />
peerchat/src/main/java/nl/tudelft/trustchain/peerchat/ui/conversation/ConversationFragment.kt:23:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
peerchat/src/main/java/nl/tudelft/trustchain/peerchat/ui/conversation/ConversationFragment.kt:53:        TransactionRepository(getIpv8().getOverlay()!!, gatewayStore)
peerchat/src/main/java/nl/tudelft/trustchain/peerchat/ui/conversation/TransferFragment.kt:18:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
peerchat/src/main/java/nl/tudelft/trustchain/peerchat/ui/conversation/TransferFragment.kt:39:        TransactionRepository(getIpv8().getOverlay()!!, gatewayStore)
peerchat/src/main/java/nl/tudelft/trustchain/peerchat/ui/conversation/TransferFragment.kt:88:            TransactionRepository.prettyAmount(transactionRepository.getMyVerifiedBalance())
peerchat/src/main/java/nl/tudelft/trustchain/peerchat/ui/conversation/ChatMessageItemRenderer.kt:15:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
peerchat/src/main/java/nl/tudelft/trustchain/peerchat/ui/conversation/ChatMessageItemRenderer.kt:38:                TransactionRepository.prettyAmount((item.transaction.transaction["amount"] as BigInteger).toLong())
app/src/main/java/nl/tudelft/trustchain/app/TrustChainApplication.kt:38:import nl.tudelft.trustchain.common.eurotoken.TransactionRepository
app/src/main/java/nl/tudelft/trustchain/app/TrustChainApplication.kt:83:        val tr = TransactionRepository.getInstance(this, trustchain)
